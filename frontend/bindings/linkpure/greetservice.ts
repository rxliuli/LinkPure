// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as rules$0 from "./internal/rules/models.js";

export function CheckNotificationPermission(): $CancellablePromise<boolean> {
    return $Call.ByID(3722011932);
}

export function CheckRuleChain(list: rules$0.LocalRule[], $from: string): $CancellablePromise<rules$0.CheckResult> {
    return $Call.ByID(3728189383, list, $from).then(($result: any) => {
        return $$createType0($result);
    });
}

export function DeleteRule(id: string): $CancellablePromise<void> {
    return $Call.ByID(1970821577, id);
}

export function GetNotificationEnabled(): $CancellablePromise<boolean> {
    return $Call.ByID(1881535628);
}

export function GetRules(): $CancellablePromise<rules$0.LocalRule[]> {
    return $Call.ByID(741420447).then(($result: any) => {
        return $$createType2($result);
    });
}

export function NewRule(rule: rules$0.LocalRule): $CancellablePromise<void> {
    return $Call.ByID(2857478412, rule);
}

export function OpenJsonFile(): $CancellablePromise<string> {
    return $Call.ByID(1573546616);
}

export function RequestNotificationPermission(): $CancellablePromise<boolean> {
    return $Call.ByID(2287630217);
}

export function SaveJsonFile(content: string, fileName: string): $CancellablePromise<boolean> {
    return $Call.ByID(675031225, content, fileName);
}

export function SetNotificationEnabled(enabled: boolean): $CancellablePromise<void> {
    return $Call.ByID(1189743600, enabled);
}

export function UpdateRule(rule: rules$0.LocalRule): $CancellablePromise<void> {
    return $Call.ByID(2895923195, rule);
}

// Private type creation functions
const $$createType0 = rules$0.CheckResult.createFrom;
const $$createType1 = rules$0.LocalRule.createFrom;
const $$createType2 = $Create.Array($$createType1);
